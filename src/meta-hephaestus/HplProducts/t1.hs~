import Language.Haskell.Syntax
import Language.Haskell.Parser

data CodeModel = CodeImputModel { 
                     splMappings :: [String] 
                 } |
                 CodeOutputModel {
                     components :: [(Int, Int)], 
                     buildEntries :: [String],
                     preProcessFiles :: [String] 
                 }

main :: IO()
main = do
      let (CodeModel y) = CodeImputModel { splMappings = [] }
      let (CodeModel z) = CodeOutputModel { }
      x <- readFile "Main1.hs"
      let (ParseOk y) = parseModule x
      print $ show y